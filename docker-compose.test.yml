# docker-compose.test.yml (로컬 부하 테스트 전용 - 기본 포트 사용)

services:
  spring-app:
    build: .
    container_name: my-spring-app-test
    env_file: [ ".env" ]
    environment:
      - SPRING_PROFILES_ACTIVE=test,docker
      - UPLOAD_DIR=/uploads/
      - TZ=Asia/Seoul
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/uploads
      - ./logs:/app/logs
      - ./config/fcm-key.json:/app/config/fcm-key.json:ro
    networks:
      - my-test-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started

  mysql:
    image: mysql:8.0
    container_name: my-mysql-test
    env_file: [ ".env" ]
    environment:
      - MYSQL_DATABASE=workout-db
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - TZ=Asia/Seoul
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - mysql-test-data:/var/lib/mysql
    networks:
      - my-test-network
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "${DB_USERNAME}", "-p${DB_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0-alpine
    container_name: my-redis-test
    volumes:
      - redis-test-data:/data
    networks:
      - my-test-network

  prometheus:
    image: prom/prometheus:latest
    container_name: my-prometheus-test
    # [수정] 외부 포트를 9090으로 복원
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    networks:
      - my-test-network
    depends_on:
      - spring-app

  grafana:
    image: grafana/grafana:latest
    container_name: my-grafana-test
    # [수정] 외부 포트를 3000으로 복원
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning/:/etc/grafana/provisioning/
      - ./monitoring/grafana/dashboards/:/etc/grafana/dashboards/
    networks:
      - my-test-network
    depends_on:
      - prometheus


networks:
  my-test-network:
    driver: bridge

volumes:
  mysql-test-data:
  redis-test-data: