plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.workout'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

configurations {
	all {
		exclude group: 'org.slf4j', module: 'slf4j-simple'
	}
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	testCompileOnly 'org.projectlombok:lombok:1.18.32'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'it.ozimov:embedded-redis:0.7.3'
	testRuntimeOnly 'com.h2database:h2'

	// JPA & DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Flyway Core와 사용하는 DB에 맞는 드라이버 추가
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	// Security
	implementation "org.springframework.boot:spring-boot-starter-security"

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-data-redis'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// SMTP
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Logging
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.micrometer:micrometer-observation'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.10'

	// FCM
	implementation 'com.google.firebase:firebase-admin:9.4.3'

	// Batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

  // OAuth2
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'


	// L1 로컬 캐시: Caffeine
	implementation 'com.github.ben-manes.caffeine:caffeine'
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	// L2 글로벌 캐시: Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// 서킷 브레이커: Resilience4j
	implementation group: 'io.github.resilience4j', name: 'resilience4j-spring-boot3', version: '2.2.0'

	// 분산 락을 쉽게 사용하기 위한 Redisson
	implementation 'org.redisson:redisson-spring-boot-starter:3.27.2'
}

/*
tasks.withType(Test) {
	useJUnitPlatform()
	jvmArgs(
			"-javaagent:${classpath.find { it.name.contains('byte-buddy-agent') }.absolutePath}"
	)
}*/
